<?php

// This file is generated by Composer
require_once __DIR__ . '/vendor/autoload.php';

$client = new \Github\Client();

$tokenFile = __DIR__ . '/.github_token';

$token = trim(@file_get_contents($tokenFile));

if (!$token) {
    echo "Go to https://github.com/settings/tokens , create a token for repo access and repo_delete and put the token into $tokenFile" . PHP_EOL;
    die();
}

$client->authenticate($token, '', \Github\Client::AUTH_HTTP_TOKEN);

$userInfo = $client->api('current_user')->show();
$userName = $userInfo['login'];


$temporaryRepoName = 'shifter-temporary--' . basename(getcwd());

$gitHubRepo = $client->api('repo')->show($userName, $temporaryRepoName);

if ($gitHubRepo) {
    if ( ! $gitHubRepo['private']) {
        die('Refusing to work on public repos.' . PHP_EOL);
    }
} else {
    $gitHubRepo = $client->api('repo')->create($temporaryRepoName,
        'Shifter Temporary Repo, can be deleted after shifting', $sourceRepo, false);
}

$sshUrl = $gitHubRepo['ssh_url'];


$repo = new \Cz\Git\GitRepository(getcwd());

$currentBranch = $repo->getCurrentBranchName();

try {
    $repo->removeRemote('shifter');
} catch (\Cz\Git\GitException $e) {
    echo "Not necessary to remove remote" . PHP_EOL;
}

$repo->addRemote('shifter', $sshUrl);

echo 'Pushing...';
$repo->push('shifter', [$currentBranch]);
echo 'done' . PHP_EOL;

echo "Go to https://laravelshift.com/shifts purchase a shift and enter the following repo name:" . PHP_EOL;

echo $gitHubRepo['full_name'] . PHP_EOL;

echo "And this branch:" . PHP_EOL;

echo $currentBranch;



